2017.9.13
	1.第一次备份驱动，未做测试，其中CCP.c/CCP.h/CCPPAR.h都做出了部分修改（用汉字标注了）。
	2.DFlash和CAN部分仍然需要修改，完善。
2017.9.18
	1.将文件分类进不同的Group
	2.排除了CAN发送时的一个Bug(id<0x7fff时为标准帧)
2017.9.19
	1.改变project的结构（分文件夹组织）
	2.完善CAN.c文件，几乎已包含所有需要的函数。
2017.9.20
	1.进一步修改CAN.c有关Bus-Off的函数和相关寄存器设置，已基本实现功能。
	2.取消CAN发送中断，以检测CAN0TFLG作为替代，将CCPCALLBACK函数耦合。
	3.基本验证CAN和CCP功能满足，可以完全取代之前的所有文件。
2017.9.21
	1.修改CAN发送函数，使其发送的同时使能一个发送缓冲区空中断，中断产生时关闭中断。
	2.修改了进入睡眠模式函数中的一个Bug（忘记开启中断了）。
	3.增加CAN命令发送函数，取消了在PIT中发送；
	4.验证发送中断是可靠的，并将ccpCallBack函数放到中断中处理
	5.基本测试功能OK。
2017.9.22
	1.修改CAN总线状态检测函数，当Warning次数大于500时同样认为是Error,以克服在Warning状态下总线不工作的问题。
	2.修改程序结构，将ExtCCP文件处理后，放入CCPDriver Group中。
	3.调整程序所有的注释状态。
	4.修改看门狗函数的形式，直接调用已存在的宏，测试可行。
2017.11.20
	1.移植ECT驱动。
2017.11.24
	1.移植绝大多数驱动
	2.修改PIT.c使用最新的任务调度方法
2017.12.1
	1.增加SCI，printk函数
	2.测试printk函数功能，可用。
2017.12.3
	1.将初始化函数全交由SysInit来处理。
	2.分离任务调度函数，并测试Schedule函数功能通过。
2017.12.5
	1.测试ccp连接，往buffer中写数据成功，将原有#define CCP_MTABYTEPTR volatile unsigned char *__far
	改回#define CCP_MTABYTEPTR CCP_BYTEPTR。
	2.意味着无论如何初始化时都需要读取Flash到Buffer中，不再使用全局地址了。
2017.12.6
	1.已验证可将Buffer中的数据存入DFlash中，再次读取也成功。
2017.12.7
	1.增加memorycopy函数，将ccpBuffer中数据拷贝到Trans中
	2.测试ccp的upload功能，发现upload命令最多一次只能上传5个字节（注意：为了与dwload而不是dwload6对应）
2017.12.8
	1.增加pid相关内容（已注释）
	2.增加units.c\units.h文件用以放于多处文件耦合的函数或不好分类的函数。
2017.12.9
	1.测试转速求解函数，已完成。需注意Buffer需要提前初始化否则会有意想不到的错误值出现。
	2.增加dataInits函数用以初始化定义的变量。
	3.测试PWM模块，shiftup方向为顺时针转
	4.测试AD采集模块，功能完成。